======================
Indexing priority
======================

"Hello " + xxx.name

---

(document
  (expr
    left: (expr (string (string_start) (string_content) (string_end)))
    right: (expr (expr (id)) (id))
  ))

======================
Parses example 2
======================

{
  person1: {
    name: "Alice",
    welcome: "Hello " + self.name + "!",
  },
  person2: self.person1 { name: "Bob" },
}

---
(document
  (expr
    (member
      (field (fieldname (id))
        (expr
          (member
            (field (fieldname (id))
              (expr (string (string_start) (string_content) (string_end)))
            ))
          (member
            (field (fieldname (id))
               (expr
                 left:
                   (expr
                      left:
                        (expr
                          (string (string_start) (string_content) (string_end))
                          )
                      right: (expr (expr (self)) (id))
		   )
                  right:
                    (expr
                       (string (string_start) (string_content) (string_end))
                       )
                 )))
            )))
      (member
        (field (fieldname (id))
          (expr
             (expr (expr (self)) (id))
             (member
               (field (fieldname (id))
                  (expr
                    (string (string_start) (string_content) (string_end))
       ))))))))

=================================
should parse basic call foo(1,2)
=================================

{
  x1: foo(1,2)
}

---

(document
  (expr
     (member (field (fieldname (id))
               (expr (expr (id))
                     (args (expr (number))
                           (expr (number))))))))

=================================
should parse basic call foo(1,2,3)
=================================

{
  x1: foo(1,2,3)
}

---

(document
  (expr
     (member (field (fieldname (id))
               (expr (expr (id))
                     (args (expr (number))
                           (expr (number))
                           (expr (number))
                           ))))))

=================================
should parse tailstrict
=================================

{
  x1: foo(1,2,3) tailstrict
}

---

(document
  (expr
     (member (field (fieldname (id))
               (expr (expr (id))
                     (args (expr (number))
                           (expr (number))
                           (expr (number))
                           )
                     (tailstrict)
   )))))

=================================
should parse if-then-else
=================================

if x > 0 then x + 2 else x - 2

---
(document
  (expr
    condition:
      (expr left: (expr (id)) right: (expr (number)))
    consequence:
      (expr left: (expr (id)) right: (expr (number)))
    alternative:
      (expr left: (expr (id)) right: (expr (number)))))

=================================
if-then-else vs local priority
=================================

local a = if x > 0 then x + 2 else x - 2; a + 2

---
(document
  (expr
    (local_bind
      (local)
      (bind (id)
        (expr
          condition:
            (expr left: (expr (id)) right: (expr (number)))
          consequence:
            (expr left: (expr (id)) right: (expr (number)))
          alternative:
            (expr left: (expr (id)) right: (expr (number)))
         ))
      (expr left: (expr (id)) right: (expr (number))))))

=================================
operator precedence
=================================
3 + 4 * true

---

(document
  (expr
     left: (expr (number))
     right:
        (expr
	   left: (expr (number))
	   right: (expr (true)))))
